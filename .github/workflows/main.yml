name: GitHub Actions

on: [push]

jobs:
  test:
    name: ${{ matrix.task }} (${{ matrix.os }}, ${{ matrix.subtitle }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # - os: ubuntu-latest
          #   task: r-package
          #   compiler: gcc
          #   subtitle: gcc
          # - os: ubuntu-latest
          #   task: r-package
          #   compiler: clang
          #   subtitle: clang
          # - os: macOS-latest
          #   task: r-package
          #   compiler: gcc
          #   subtitle: gcc
          # - os: macOS-latest
          #   task: r-package
          #   compiler: clang
          #   subtitle: clang
          - os: windows-latest
            task: r-package
            compiler: MINGW
            subtitle: MINGW
          # - os: windows-latest
          #   task: r-package
          #   compiler: MSVC
          #   subtitle: MSVC
          # - os: ubuntu-latest
          #   task: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 5
          submodules: true
      - name: Setup and run tests on Linux and macOS
        if: matrix.os != 'windows-latest'
        shell: bash
        env:
          COMPILER: "${{ matrix.compiler }}"
          CONDA_ENV: "test-env"
          GITHUB_ACTIONS: "true"
          TASK: "${{ matrix.task }}"
        run: |
          if [[ "${{ matrix.os }}" == "macOS-latest" ]]; then
              export OS_NAME="macos"
              export R_MAC_VERSION=3.6.3
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
              export OS_NAME="linux"
              export R_TRAVIS_LINUX_VERSION=3.6.3-1bionic;
          fi
          if [ -z ${{ matrix.compiler }} ]; then
              export COMPILER=${{ matrix.compiler }}
          fi
          export BUILD_DIRECTORY="$GITHUB_WORKSPACE"
          export CONDA="$HOME/miniconda"
          export PATH="$CONDA/bin:${HOME}/.local/bin:$PATH"
          export LGB_VER=$(head -n 1 VERSION.txt)
          $GITHUB_WORKSPACE/.ci/setup.sh
          $GITHUB_WORKSPACE/.ci/test.sh
      - name: Use conda on Windows
        if: matrix.os == 'windows-latest'
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: false
      - name: Setup and run tests on Windows
        if: matrix.os == 'windows-latest'
        # have to use 'pwsh' because with 'powershell', anything writing to
        # stderr causes the job to fail
        shell: powershell -NonInteractive -ExecutionPolicy Bypass -File {0}
        env:
          COMPILER: "${{ matrix.compiler }}"
          GITHUB_ACTIONS: "true"
          TASK: "${{ matrix.task }}"
        run: |
          $env:BUILD_SOURCESDIRECTORY = $env:GITHUB_WORKSPACE
          conda init powershell
          & "$env:GITHUB_WORKSPACE/.ci/test_windows.ps1"

# links
# * https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_iddefaultsrun
# * https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
# * https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
# * https://github.com/marketplace/actions/setup-miniconda
# * https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources
# * https://github.com/actions/virtual-environments/blob/master/images/win/Windows2019-Readme.md
# * https://stackoverflow.com/questions/2095088/error-when-calling-3rd-party-executable-from-powershell-when-using-an-ide/2095623#2095623
# * https://stackoverflow.com/a/11826589/3986677
# * https://github.com/marketplace/actions/setup-miniconda
# * https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
# * see "fail-fast behavior" in https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
