{
  "test_dask.py::test_dask_classes_and_sklearn_equivalents_have_identical_constructors_except_client_arg[classes0]": true,
  "test_dask.py::test_dask_classes_and_sklearn_equivalents_have_identical_constructors_except_client_arg[classes1]": true,
  "test_dask.py::test_dask_classes_and_sklearn_equivalents_have_identical_constructors_except_client_arg[classes2]": true,
  "test_dask.py::test_dask_methods_and_sklearn_equivalents_have_similar_signatures[methods0]": true,
  "test_dask.py::test_dask_methods_and_sklearn_equivalents_have_similar_signatures[methods1]": true,
  "test_dask.py::test_dask_methods_and_sklearn_equivalents_have_similar_signatures[methods2]": true,
  "test_dask.py::test_dask_methods_and_sklearn_equivalents_have_similar_signatures[methods3]": true,
  "test_dask.py::test_dask_methods_and_sklearn_equivalents_have_similar_signatures[methods4]": true,
  "test_dask.py::test_dask_methods_and_sklearn_equivalents_have_similar_signatures[methods5]": true,
  "test_dask.py::test_dask_methods_and_sklearn_equivalents_have_similar_signatures[methods6]": true,
  "test_dask.py::test_errors": true,
  "test_dask.py::test_find_open_port_works": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-classification-cloudpickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-classification-joblib]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-classification-pickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-ranking-cloudpickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-ranking-joblib]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-ranking-pickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-regression-cloudpickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-regression-joblib]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[False-regression-pickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-classification-cloudpickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-classification-joblib]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-classification-pickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-ranking-cloudpickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-ranking-joblib]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-ranking-pickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-regression-cloudpickle]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-regression-joblib]": true,
  "test_dask.py::test_model_and_local_version_are_picklable_whether_or_not_client_set_explicitly[True-regression-pickle]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[array-classification]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[array-ranking]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[array-regression]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[dataframe-classification]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[dataframe-ranking]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[dataframe-regression]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[dataframe-with-categorical-classification]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[dataframe-with-categorical-ranking]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[dataframe-with-categorical-regression]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[scipy_csr_matrix-classification]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[scipy_csr_matrix-ranking]": true,
  "test_dask.py::test_network_params_not_required_but_respected_if_given[scipy_csr_matrix-regression]": true,
  "test_dask.py::test_ranker[None-array]": true,
  "test_dask.py::test_ranker[None-dataframe-with-categorical]": true,
  "test_dask.py::test_ranker[None-dataframe]": true,
  "test_dask.py::test_ranker[group1-array]": true,
  "test_dask.py::test_ranker[group1-dataframe-with-categorical]": true,
  "test_dask.py::test_ranker[group1-dataframe]": true,
  "test_dask.py::test_regressor_pred_contrib[dataframe-with-categorical]": true,
  "test_dask.py::test_regressor_pred_contrib[dataframe]": true,
  "test_dask.py::test_regressor_pred_contrib[scipy_csr_matrix]": true,
  "test_dask.py::test_regressor_quantile[0.1-array]": true,
  "test_dask.py::test_regressor_quantile[0.1-dataframe-with-categorical]": true,
  "test_dask.py::test_regressor_quantile[0.1-dataframe]": true,
  "test_dask.py::test_regressor_quantile[0.1-scipy_csr_matrix]": true,
  "test_dask.py::test_regressor_quantile[0.5-array]": true,
  "test_dask.py::test_regressor_quantile[0.5-dataframe-with-categorical]": true,
  "test_dask.py::test_regressor_quantile[0.5-dataframe]": true,
  "test_dask.py::test_regressor_quantile[0.5-scipy_csr_matrix]": true,
  "test_dask.py::test_regressor_quantile[0.9-array]": true,
  "test_dask.py::test_regressor_quantile[0.9-dataframe-with-categorical]": true,
  "test_dask.py::test_regressor_quantile[0.9-dataframe]": true,
  "test_dask.py::test_regressor_quantile[0.9-scipy_csr_matrix]": true,
  "test_dask.py::test_training_does_not_fail_on_port_conflicts": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[array-classification]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[array-ranking]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[array-regression]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[dataframe-classification]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[dataframe-ranking]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[dataframe-regression]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[dataframe-with-categorical-classification]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[dataframe-with-categorical-ranking]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[dataframe-with-categorical-regression]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[scipy_csr_matrix-classification]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[scipy_csr_matrix-ranking]": true,
  "test_dask.py::test_training_succeeds_even_if_some_workers_do_not_have_any_data[scipy_csr_matrix-regression]": true,
  "test_dask.py::test_training_works_if_client_not_provided_or_set_after_construction[classification]": true,
  "test_dask.py::test_training_works_if_client_not_provided_or_set_after_construction[ranking]": true,
  "test_dask.py::test_training_works_if_client_not_provided_or_set_after_construction[regression]": true,
  "test_dask.py::test_warns_and_continues_on_unrecognized_tree_learner": true,
  "test_dask.py::test_warns_but_makes_no_changes_for_feature_or_voting_tree_learner": true
}